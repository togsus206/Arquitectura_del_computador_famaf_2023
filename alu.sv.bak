module alu #(parameter N=64)
					(input logic [N-1:0] a, 
					input logic [N-1:0] b,
					input logic [3:0] ALUControl,
					output logic [N-1:0] result,
					output logic zero);
					
	always_comb
		casez(ALUControl[3:0])
        // and
        4'b0000: 
            result = a & b;
            zero = (result == 0) ? 1 : 0; // Calcula zero cuando result es igual a 0.
            
        // or
        4'b0001: 
            result = a | b;
            zero = (result == 0) ? 1 : 0;
            
        // add
        4'b0010: 
            result = a + b;
            zero = (result == 0) ? 1 : 0;
            
        // sub
        4'b0110: 
            result = a - b;
            zero = (result == 0) ? 1 : 0;
            
        // pass input 
        4'b0111: 
            result = b;
            zero = (result == 0) ? 1 : 0;
    endcase

endmodule 